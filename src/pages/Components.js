import { useState, useEffect, useRef } from 'react';
import noise from 'noisejs';
import Portrait from '../media/Portrait.svg';
// import { Canvas, useFrame, extend, useThree, shadowMap, colorManagement } from '@react-three/fiber';
// import * as THREE from 'three';
// import { ShaderPark } from 'shader-park-core';

import ProceduralAnimation from './Proc_Anim';
import TPSPrototype from './TPS_proto';
import GANVAE from './GANVAE';
import NeuralNetwork from './NeuralNetwork';

function ImageFade({images, isMouseOver, ...props})
{
	const [index, setIndex]     = useState(0);
	const [opacity, setOpacity] = useState(1);

	useEffect(() => {
		const interval = setInterval(() => 
		{
			if ( !isMouseOver )
				return;

			setOpacity(0);
			setTimeout(() => 
			{
				setIndex((index + 1) % images.length);
			}, 500);
			setTimeout(() => {
				setOpacity(1);
			}, 1000);
		}, 4000);
		
		return () => clearInterval(interval);
	}, [index, isMouseOver, images.length]);
	
	return (
		<img
		src={images[index]}
		alt=""
		style={{ opacity, transition: 'opacity 0.5s ease-in-out', ...props.style}}
		/>
	);
}

// function Sphere()
// {
// 	const mesh = useRef();
// 	let time = 0;

// 	const sphereGeometry = new THREE.SphereGeometry( 3, 1, 1 );
// 	const update = () => 
// 	{
// 	const PI = 3.141592;
// 	time += performance.now() * 0.001;
// 	// console.log( 'delta: ', time );

// 	mesh.current.rotation.x = window.innerHeight*PI;
// 	mesh.current.rotation.y = window.innerWidth*PI;

// 	mesh.current.geometry.normalsNeedUpdate  = true;
// 	mesh.current.geometry.verticesNeedUpdate = true;
// 	mesh.current.geometry.computeVertexNormals();
// 	};

// 	useEffect( () => { 
// 	update();
// 	console.log( 'updating' );
// 	})

// 	return (
// 	<mesh ref={mesh}>
// 		<primitive object={sphereGeometry} attach={'geometry'} />
// 		<meshNormalMaterial />
// 	</mesh>
// 	);
// }
export function DropDown()
{
	return (
		<span className="material-symbols-rounded expantion-arrow">
			arrow_downward
		</span>
	);
}

const getBgImg = ( isNotMinWidth, radius, col1='#a6afff', col2='#f1345d', anim_t=20 ) =>
{
	return isNotMinWidth ? `
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 450">
		<style>
			.circle-1, .circle-2  {
				transform-origin: 400px 225px;
				filter: blur(40px);
				opacity: 1;
			}
			.circle-1  {
				animation: anim-1 ${anim_t}s ease-in-out infinite, fade-in 3s ease-in-out;
				transform: translateZ(0.0001px);
			}
			.circle-2 {
				animation: anim-2 ${anim_t}s ease-in-out infinite, fade-in 3s ease-in-out;
				transform: translateZ(0.0002px);
			}
			@keyframes anim-1 {
				25% {
					transform-origin: 250px 155px;
					transform: rotate(180deg);
				}
				50% {
					transform: rotate(0deg);
				}
				75% {
					transform-origin: 550px 155px;
					transform: rotate(180deg);
				}
				100% {
					transform: rotate(360deg);
				}
			}
			@keyframes anim-2 {
				25% {
					transform-origin: 500px 295px;
					transform: rotate(-180deg);
				}
				500% {
					transform: rotate(0deg);
				}
				75% {
					transform-origin: 200px 295px;
					transform: rotate(180deg);
				}
				100% {
					transform: rotate(360deg);
				}
			}
			@keyframes fade-in {
				0% {
					opacity: 0;
				}
				100% {
					opacity: 1;
				}
			}
		</style>
		<g >
			<ellipse class="circle-1" cx="402.348" cy="230" fill="${col1}" rx="${radius}" ry="${radius}"/>
			<ellipse  class="circle-2" cx="300.849" cy="225" fill="${col2}" rx="${radius}" ry="${radius}"/>
		</g>
	</svg>
	` : `
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 450">
		<style>
			.circle-1, .circle-2 {
				transform-origin: 400px 225px;
				filter: blur(40px);
				animation: fade-in 3s ease-in-out;
			}
			.circle-1 {
				transform : rotate(70deg) translateX( 100px );
			}
			.circle-2 {
				transform : rotate(0deg) translate3d(-10px, -80px,0 );
			}
			@keyframes fade-in {
				0% {
					opacity: 0;
				}
				100% {
					opacity: 1;
				}
			}
		</style>
		<g >
			<ellipse class="circle-1" cx="402.348" cy="230" fill="${col1}" rx="${radius}" ry="${radius}"/>
			<ellipse  class="circle-2" cx="300.849" cy="225" fill="${col2}" rx="${radius}" ry="${radius}"/>
		</g>
	</svg>`;
}

const getPortrait = ()=>
{
	return `
	<svg xmlns="http://www.w3.org/2000/svg" width="400" height="400" version="1.0" viewBox="0 0 300 300">
   <style type="text/css">
      :root{
         --anim-t: 13s;
         --init-opac: 0;
      }
      .curve-path {
         fill             : #cf7e89;
         paint-order      : fill stroke markers;
         stroke-miterlimit: 10;
         stroke-dasharray : 1003;
         filter           : blur(2px);
      }
      @keyframes loop {
         50% {
            stroke-dashoffset: -1000;
         }
      }
      #Support {
         opacity: var(--init-opac);
         animation: support-fade var(--anim-t) ease-out infinite;
      }
      @keyframes support-fade {
         10%{ opacity: 1; }
         70%{ opacity: 1; }
      }
      #ArmL {
         opacity: var(--init-opac);
         animation: armL-fade var(--anim-t) ease-out infinite;
      }
      @keyframes armL-fade {
         10%{ opacity: 0; }
         20%{ opacity: 1; }
         80%{ opacity: 1; }
      }
      #ArmR {
         opacity: var(--init-opac);
         animation: armR-fade var(--anim-t) ease-out infinite;
      }
      @keyframes armR-fade {
         15%{ opacity: 0; }
         25%{ opacity: 1; }
         70%{ opacity: 1; }
      }
      #Detail1 {
         opacity: var(--init-opac);
         animation: Detail1-fade var(--anim-t) ease-out infinite;
      }
      @keyframes Detail1-fade {
         28%{ opacity: 0; }
         38%{ opacity: 1; }
         80%{ opacity: 1; }
      }
      #Detail2 {
         opacity: var(--init-opac);
         animation: Detail1-fade var(--anim-t) ease-out infinite;
      }
      @keyframes Detail1-fade {
         35%{ opacity: 0; }
         45%{ opacity: 1; }
         80%{ opacity: 1; }
      }
      #Hair {
         opacity: var(--init-opac);
         animation: hair-fade var(--anim-t) ease-out infinite;
      }
      @keyframes hair-fade {
         25%{ opacity: 0; }
         35%{ opacity: 1; }
         80%{ opacity: 1; }
      }
      #Face {
         opacity: var(--init-opac);
         animation: face-fade var(--anim-t) ease-out infinite;
      }
      @keyframes face-fade {
         27%{ opacity: 0; }
         37%{ opacity: 1; }
         /* 45%{ opacity: 1; }/
         60%{ opacity: 1; }
      }

   </style>
    <g>
        <path id='Hair'    class="curve-path" d="M163.7 24.2c-2.7 1-2.7 1.1-1.1 2.9.9 1 1.3 1.9.8 1.9s-1.5-.9-2.2-2c-1.5-2.4-5.7-2.8-4.8-.4.3.8.2 1.2-.4.9-.6-.3-1 .1-1 .9s-.9 2-2 2.6c-1.1.6-2.3 2.3-2.6 3.8-.4 1.5-1.3 3.6-2 4.7-.8 1.1-1.4 2.9-1.4 4-.1 1.1-1.4 5.8-3 10.5-3.3 9.5-3.5 11-1.9 15.5 1 2.6.8 4.2-.9 9.1-1.5 4.3-2.1 5.2-2.1 3.2-.1-1.4-.7-2.9-1.3-3.2-1-.3-.8-.9.5-1.9 2.4-2 2.2-5.3-.5-6-1.2-.4-2.8-.1-3.5.5-1.8 1.4-1.6 5.5.2 6.2.8.3 1.5 1.5 1.5 2.6 0 1.2.5 1.8 1 1.5.6-.3 1-.1 1 .4 0 1.6-2.6 1.3-4.1-.5-3.4-4.1-1.1-14.2 3.1-13.1 1.6.4 1.7.1 1-1.8-.5-1.3-.6-2.6-.2-3 .4-.4 0-.6-.8-.3-2.4.7-6.4 9.8-6.3 14.3 0 5.8 1.1 9.5 2.8 9.5.8 0 1.5-.5 1.5-1 0-.6-.5-1-1.2-1-.6 0-.8-.3-.5-.6.4-.4 2.1.7 3.9 2.5 1.8 1.7 3.9 3.1 4.8 3 3.7-.3 4.8.3 6 3.2 1.1 2.5 1 4.2-.4 9.9-2 8.4-2 9.1.1 13.4 1.3 2.9 1.4 3.8.3 5.1-1.6 1.9-3 1.9-3 0 0-.8-.4-1.5-1-1.5-1 0-1.6 10.4-1.3 20 1 26.9 1.3 33.8 1.8 40.6.3 4.4 1.1 9.7 1.7 11.9.6 2.2 1.3 4.6 1.4 5.3.1.8.5 1.7.9 2 .3.4.4-.7.1-2.4-.4-2.3-.1-3.6 1.4-4.9 1.1-1 2-2.6 2-3.7 0-1 .5-1.8 1.1-1.8.5 0 .7-.5.4-1-.9-1.5 10.3-22.5 14.8-27.6 2.1-2.4 3.5-4.4 2.9-4.4-2.2 0-9.5 10.7-15 22-5.6 11.7-8.6 14.7-6.3 6.3 1.2-4.3 1-4.8-1.7-3.4-1.9 1-2 .9-1.1-2.4.6-1.9.9-4.1.8-4.7-.4-3.1.2-4.8 1.6-4.8.8 0 1.5-.7 1.5-1.7 0-.9.3-1.4.6-1 .4.3 2.4-2.2 4.6-5.6 2.2-3.4 5-7.2 6.1-8.5 1.7-1.9 1.8-2.2.4-1.6-.9.3-1.7.9-1.7 1.3 0 .3-1.3 2-2.8 3.6-1.6 1.7-4.1 4.9-5.7 7.3-2.5 3.8-6.5 5.8-6.5 3.2 0-3.7 8.9-12.8 16.2-16.6 5.3-2.7 7.5-5 3.2-3.4-1.4.6-6 3.5-10.2 6.5-7.8 5.8-9.9 6.6-8.7 3.7 1.3-3.2 1.4-5.1.4-8.4-.7-2.5-.6-3.5.5-4.4 1.2-.9 1.2-1.1-.1-2-1.3-.8-1.5-2.2-.9-7.6.9-7.8 2.2-8.9 6.4-5 1.8 1.7 5 3.2 8.3 3.9 6.6 1.3 9.3.4 5.8-2.1-2.1-1.4-1.9-2.1.4-1.7 1.6.2.5-1.7-1.3-2.2-1-.3-1.9-.2-1.8.2.3 2.8-.4 3.7-3.1 3.5-3.6-.2-6.8-1.9-8.1-4.4-1.3-2.4-1.3-3.3 0-2.5.6.4.1-1.6-1-4.4-1.9-5-1.8-8.1.4-8.1.6 0 .3-.5-.6-1.1-1.9-1.1-2.5-6.4-.8-7.4 1.7-1.1 1.1-5.1-1.4-8.8-1.3-1.9-2.2-3.8-1.9-4.1.9-.9-4.1-.3-5.4.6-.6.5-1.4.5-1.7 0-.6-1 2.5-10.3 4.1-11.9.6-.7 2.1-2.8 3.3-4.8 2.4-3.9 4.7-4.8 10.1-4.1 2 .2 4.2 0 5-.5.8-.5 1.1-.9.7-1-.5-.1-1.2-.3-1.8-.4-.5-.1-1.5-.3-2.1-.4-.5 0-.7-.6-.3-1.3.5-.8.2-.9-1-.5-.9.4-2.6.1-3.6-.5-1.6-1-2.3-.9-3.7.5-1.7 1.7-1.7 1.8.2 1.2 1.9-.6 1.9-.6.2.5-1.5.9-2.2.8-3.8-.6-1-.9-2.1-1.5-2.4-1.2-.3.3.1 1.1 1 1.8 1.9 1.6 1.9 3 0 3-1.8 0-3.9-3.6-2.5-4.5.5-.3 1-1.5 1-2.6 0-1 .9-2.4 2-3.1 1.1-.7 2-1.6 2-2.1 0-.4-.5-.5-1.1-.1-.6.3-.4-.7.5-2.4.8-1.6 1.3-3.2.9-3.5-.3-.3.3-1.4 1.2-2.4 1.1-1.1 1.4-1.8.6-2.1-.6-.2-1.1-1.3-1.1-2.4 0-1.4.5-1.8 1.5-1.4.9.3 1.5 0 1.5-.8s-.5-1.6-1.1-1.8c-.7-.2-.5-.9.5-1.7 1-.8 1.6-.9 1.6-.3 0 .7.7.9 1.7.5s1.4-.2 1 .4c-.4.6.2 1.3 1.3 1.6 1.5.4 2 0 2-1.6 0-1.5.3-1.8 1.1-1s.8 1.7-.1 3.4c-1.1 2.3-1 2.3.5.4 1.9-2.4 1.5-3.7-1.4-5.2-2.3-1.1-2.3-1.1-.4-2.2 1.6-.8 2.4-.6 4.1 1.2 1.1 1.2 2.4 3.5 2.8 5 .5 2.1.9 2.5 1.5 1.5 1.6-2.4.9-4.3-2.7-7-2.8-2.1-4.1-2.5-5.9-1.8-2.6 1-3.5.4-3.5-1.9 0-1.4.2-1.4 1-.1.8 1.2 1 1.2 1.5-.3.5-1.2 1.2-1.4 2.3-.8 1 .5 3.5.7 5.7.5 4-.4 5.6.3 12.4 5.3 2.4 1.7 2.4 1.7 1.2-.5-.6-1.2-1.6-2.2-2.1-2.2-.6 0-1-.5-1-1.2 0-.6.9-.3 2 .7s2 1.3 2 .8c0-.6-1.6-2.1-3.6-3.2-2-1.2-3.4-2.5-3.1-2.8.4-.3 1.3-.1 2 .5.8.7 1.7.9 2 .5.4-.3 1.4.4 2.4 1.6 1 1.2 2.6 2.3 3.6 2.5.9.1 4.1 2.3 6.9 4.8 4.3 3.6 5.7 5.6 7.2 10.4 2.2 6.6 7.1 12 9.3 10.2 1-.8 1.3-.6 1.3.5 0 2.9-2.1 2.9-5.1.1-1.6-1.5-2.9-2.3-2.9-1.7 0 .6 1.2 1.8 2.6 2.8 1.4.9 2.3 1.9 2 2.2-.3.3-1.4 0-2.3-.8-1.7-1.3-1.7-1.3-.3.5.8 1 1.5 2.5 1.6 3.3.2.8 1 2.3 2 3.4.9 1 1.2 1.9.6 1.9s-1.8-1-2.8-2.3c-1.7-2.4-1.7-2.6-.3 3.3.2.8-.2 1.4-.8 1.2-.7-.1-1.3.3-1.3.9 0 .8-.5.7-1.5-.1-.9-.7-1.4-1.9-1.1-2.6.2-.7-.5-2-1.7-3.1-1.8-1.5-1.9-1.5-.8-.1 1.1 1.5 1 2-.3 3.3-.9.9-1.6 2.5-1.6 3.5 0 2.3-1.6 2.9-5.9 2.2l-3.3-.5 2.6 2.6c3 3 5.7 2.9 7.3-.4 2.2-4.3 3.8-2.9 3.5 3.1-.3 5.9.8 5.8 2.8-.3.6-2 1.5-3.7 2-3.7s1.1-1 1.3-2.3l.4-2.2.2 2.3c.1 2.2.2 2.2 2.6.6 1.3-.9 2.7-2.4 3-3.5.4-1.1 1-1.7 1.5-1.4 1.8 1.1 3.3-2.5 2.4-5.7-1.1-3.8-2.9-4.7-3.1-1.6-.2 1.6 0 1.9.6.9 1.3-2.1 2.5 2.4 1.2 4.6-.9 1.6-1 1.6-1.1.1 0-.9-.4-1.9-.9-2.2-.5-.4-.7.3-.4 1.4.7 2.8-1.1 2.5-3.1-.5-.9-1.4-1.4-2.5-1-2.5.4 0 .1-.6-.5-1.4-1-1.2-.9-1.3.7-.9 2.7.7 3.3-.6 3.7-8.8.3-6.9.2-7.2-3.2-11-1.9-2.1-4.4-3.9-5.4-3.9-1.1 0-1.9-.4-1.9-.9s-.7-1.1-1.5-1.5c-1.3-.5-1.3-.2.1 1.9.9 1.4 2.4 2.5 3.3 2.6.9 0 2.9 1.7 4.6 3.7 1.9 2.5 2.2 3.1.7 1.8-2.7-2.4-2.8-1.7-.2 2.9 2.7 4.9 2.5 5.8-1 4-1.6-.8-2.9-2.1-2.7-2.8.1-.6-.6-1.2-1.5-1.2-1 0-1.7-.4-1.7-.9s-.3-1.2-.8-1.5c-.7-.5-2-2.9-4.2-7.5-.2-.5.4-.6 1.3-.3.9.4 1.6.5 1.6.3 0-.6-12.5-8.5-14-8.8-.8-.2-2.3-1.3-3.2-2.5-1-1.1-2.6-2-3.6-1.8-.9.1-3.2-.4-5.1-1.1-3.9-1.6-5.5-1.6-9.4-.2zm-26.3 51.2c-.3.9-1 1.3-1.6 1-.5-.3-.4-1.2.3-2 1.5-1.8 2.2-1.3 1.3 1z"/>
        <path id="ArmL"    class="curve-path" d="M190 149.9c-6.1 1.9-10.4 4-9.7 4.7.2.2 2.4-.3 4.8-1.2 2.7-1 7.4-1.6 12.2-1.6 7.9 0 10.3-1.1 4.5-2.1-1.8-.3-4-.8-4.8-1.1-.8-.3-4 .3-7 1.3zM134.7 150.7c-.4.3-2.1.6-3.8.5-2.4-.1-2.9.3-2.5 1.5.4.9-.7 3.1-2.7 5.3-1.8 2.2-4 5.2-4.8 6.7-.7 1.5-2 3.2-2.6 3.6-.7.4-1.3 1.5-1.3 2.4 0 .9-.6 1.3-1.4 1-1.2-.5-1.5.3-1.3 3.6.1 2.3-.2 5.2-.6 6.4-.6 1.7-.5 2.3.7 2.3.8 0 1.8-.5 2.2-1.2.5-.7.3-.8-.5-.3-.8.4-.6-.4.4-1.8 1.8-2.8 1.2-7.2-.8-6-.7.4-.6 0 .2-1 .9-1.1 2.2-1.5 4-1.2 2.5.5 2.5.5.3-.5l-2.2-1 2-2c1.1-1.1 2.5-1.9 3.2-1.8.6.2 1.3-.6 1.5-1.7.3-2 .3-2-.6 0-.5 1.1-1 1.4-1 .7-.1-2 3-6.2 4.5-6.2.8 0 1.4-.7 1.4-1.5 0-1.7 4.9-6.5 6.7-6.5.7 0 1.3-.5 1.3-1 0-1.1-1.3-1.3-2.3-.3zM108.1 158.6c-1.3 3.6-2 6.8-1.7 7.1.3.4.6.1.6-.5 0-.7.9-2.1 2-3.2 1.3-1.3 2-3.3 2-6 0-2.2-.1-4-.3-4-.1 0-1.3 3-2.6 6.6zM121.9 152.4c-.3.3-2.4.6-4.7.7-2.4.2-4.6.7-4.9 1.2-.8 1.3 12.3.4 13.6-1.1.9-.9.7-1.2-1.2-1.2-1.3 0-2.6.2-2.8.4zM195.8 154.6c-5.8 1.2-11.4 2.7-12.5 3.4-1.7 1.1-1.7 1.1.2.5 1.1-.4 7-1.4 13.1-2.3l11-1.6 3.7 2.8c2.5 1.9 3.7 2.4 3.7 1.5 0-.9.5-.7 1.1.5.6 1 1.1 3.9 1.1 6.5-.1 4.8-3.5 15.4-5.2 15.9-.6.2-1 .8-1 1.4 0 .6.6.8 1.4.5 8.9-3.4-29.5 36.2-43.1 44.5-6 3.6-6.6 4.8-2.5 4.8 1.5 0 6.5 1.8 10.9 3.9l8.2 4-.6-3.7c-.7-4.4-1.3-5.4-1.3-2.3 0 2.1-.1 2.1-1.7.6-2.6-2.7-2.2-11 .8-14.1 3-3.2 3.9-3 3.4.8-.3 2.3.1 1.7 1.3-1.9 2.1-6.3 3.1-7.4 3.8-4.6.7 2.4 2.5 3.5 4.3 2.4.7-.5.3-1.2-1.4-2.1-3.3-1.8-3.2-2.9.5-3.6 1.6-.4 2.7-1 2.4-1.5-.3-.5-1-.6-1.6-.3-.7.4-.8.2-.4-.4.4-.6 1.4-.8 2.3-.5 1 .4 1.4.2.9-.5-.3-.6-.1-1.4.5-1.8.8-.4.9-.3.5.4-1.2 2 .5 1.3 2.4-.8 1.5-1.8 1.9-1.8 3-.5.7.8 1.7 1.5 2.3 1.5.6 0 .2-.7-.9-1.6-1.6-1.3-1.6-1.5-.2-1 1.3.4 2.3-.4 3.4-2.5 2-3.9 1.4-4.5-1.9-1.8-3.2 2.4-3.5 1.4-.7-2.1 1.1-1.4 2-3.1 2-3.9 0-.8.3-1.1.6-.8 1.2 1.1 4.2-5.8 6.2-14 3.5-13.8 3.6-15.7 1.3-20.9-1.2-2.6-2.4-4.4-2.8-4.1-.3.4-1.6.1-2.7-.6-3.7-2.4-4.9-2.4-15.8-.1zm-16.1 70.9c0 .8-.4 1.5-.9 1.5s-.6.5-.3 1.1c.7 1-2.1 4.9-3.5 4.9-1.9 0-1.6-3 .7-5.8 2.7-3.5 4-4 4-1.7zM134.7 159.4c-.3.8 0 1.7.8 1.9.7.3 1.2 0 1.1-.8-.3-2.2-1.3-2.7-1.9-1.1z"/>
        <path id="ArmR"    class="curve-path" d="M89.3 112.2c-4 4.5-9.2 15.5-11.7 25-1.4 5.3-4.1 14.3-6.1 19.9-5.7 16.6-7.6 31.6-3.8 30.2 1.2-.5 1.5-.2 1.1.9-.4.8-.2 2.1.3 2.9.6 1 .9.6.9-1.6 0-2.3.3-2.7 1-1.5.8 1.2 1 1.1 1-.8 0-1.2-.4-2.2-.9-2.2-.9 0-.4-21.9.5-22.9.2-.2.6 1.5 1 3.8 1.1 6.7 1.9 4.7 1.7-4.2l-.2-8.2 1.6 6.5c1.8 7.8 4 13.3 7.1 17.9 3.5 5.2 5.2 16.1 4.1 25.9-.5 3.6-1.1 4.6-4 6.1-3 1.7-3.4 2.3-3.1 5.4.1 1.9-.5 5.4-1.5 7.6-1.4 3.3-2.1 4-3.8 3.5-1.8-.6-1.8-.4.3 1.6 2.8 2.6 2.3 3.6-.9 1.9-1.3-.7-5.5-1.8-9.4-2.6-7.8-1.4-11.2-1.6-8-.4 1.6.7 1.2 1-2.2 1.5-3.9.7-4.3 1-4.3 3.7 0 2 .4 2.8 1.1 2.3.6-.3 4.3-.6 8.2-.7 6.3 0 6.7-.1 3.2-.8-2.2-.4-5.8-.8-8-.9l-4-.2 3.5-1.5c4.7-2 16.2-1.3 19 1.2 2.1 1.9 2.8 7.5 1 7.5-.5 0-1-.4-1-.9 0-2.6-9.8-3.6-17-1.7-4.7 1.2-5.2 1.2-3.6 0 2.1-1.5 1-2-1.2-.5-.8.5-1.2 2.1-1 3.7l.3 2.9 9.3.2c12 .2 14 1.4 13.8 7.7-.1 4.5-1.6 5.9-4.2 3.9-.5-.5.1.2 1.3 1.5 2.6 2.6 3.2 5.2.8 3.2-1.4-1.1-1.4-1-.5 1.4 1.6 4.2 1.3 4.9-1.6 4.2-2.7-.7-2.7-.7.5 1.9 2 1.8 3.1 3.6 3.1 5.3 0 2.6 0 2.5-3.5-1.2-3.1-3.4-3.9-3.8-6.7-3.2-2.2.4-4.7 2.2-7.5 5.3-2.4 2.6-4.3 4.4-4.3 4 0-1.5 2.2-5.2 4.9-8.1l2.6-3-2.5 1.7c-1.4 1-3.2 2-4.1 2.3-1.4.5-1.7 2.5-1.8 12.5 0 7.7.3 11.8.9 11.4.6-.3 1-1.3 1-2.1s.4-1.4.9-1.4c.4 0 .4-2-.2-4.5-.9-4-.8-4.8 1.6-8.3 4.4-6.7 12.2-8.9 14.8-4.1 1.6 3.1 2.1 9.2.7 8.3-1-.6-1.1-.4 0 .7.6.7 1.2 2.7 1.2 4.5 0 3.2 5.6 13.2 7.5 13.3.5.1 4.9-2.5 9.7-5.7l8.7-5.7.2-7.5c.1-4.1.3-11.2.4-15.8.2-9.9 1.5-12.2 9.5-16.7l5.2-3-.5-5c-.3-2.8-1.1-8.1-1.8-12l-1.2-6.9-1.6 4.2c-.9 2.3-2.3 5-3.1 6-.8.9-2.4 3.5-3.5 5.7s-2.6 4.8-3.4 5.7c-.7 1-1 2.5-.7 3.5.4.9.4 1.4 0 1-.9-.8-6.4 7.5-6.4 9.6 0 .7-.5 1.8-1.2 2.5-.6.6-.9 1.4-.6 1.7.3.4 1.9-1.2 3.4-3.4 4.4-6.2 6.1-4.9 2.5 1.9-1.7 3.1-1.7 3.6-.4 4.6 1.3.9 1.4 1.7.4 4.6-.9 2.9-1.7 3.6-3.4 3.3-7.1-.9-8-3.2-5.7-14.1 1-4.9 1.8-10.4 1.9-12.2.1-1.7.2-4.6.2-6.4.1-2.1 1-3.9 2.6-5.1 1.3-1.1 2.2-2.5 1.9-3.2-.2-.8.2-1.6 1-1.9.8-.3 1.4-1.5 1.4-2.6s.5-2 1-2c.6 0 1-.6 1-1.4 0-2.8-3.5-.9-5.4 2.9-2.8 5.6-3.1 2.6-.6-5.1 1.6-4.6 2-7.8 1.6-10.4-.4-2.9-.2-4.1.8-4.7.8-.5 1.8-2.8 2.2-5.3.6-4.2.5-4.4-1-2.5-.8 1.1-1.6 3.2-1.6 4.7 0 1.6-.4 2.8-.9 2.8-1.3 0-1.9-3.5-.9-5.4.6-1.1.4-3.4-.6-6.9-.8-2.8-1.6-8.5-1.8-12.4-.2-4-.7-7.3-1.2-7.3-1.2 0 1.2-27.6 2.9-33.1.4-1 .2-1.9-.4-1.9-.5 0-1.3 1.7-1.8 3.7-.4 2.1-.8 4.1-.9 4.5-.1.5-.2 2.9-.3 5.5-.1 4.7-.2 4.7-1.4 2.2-2.2-4.2-2.7-10.9-1.1-16.8.8-3 1.4-7.5 1.4-9.8 0-2.4.4-4.3.9-4.3s1.4-2.1 2-4.8c.7-2.6 1.9-5.7 2.7-7 .8-1.2 1.3-2.2 1.1-2.2-.2 0-1.3 1-2.4 2.2zm-8.4 28c0 4.7.8 11 1.7 14.3 2.3 8 2.8 21.6.8 20.8-2.3-.8-3.6-7.1-4.1-19.1-.5-10.2.3-24.2 1.2-24.2.2 0 .4 3.7.4 8.2zm9.1 72c0 .2-.7 2.4-1.5 5.1-1.8 5.9-5.1 24.9-6 34.1-.5 4.5-1.4 7.9-2.7 9.7-1.7 2.3-1.8 3-.7 5l1.3 2.4.8-3c.6-2.6.7-2.5.3.8-.3 3.2.1 4.4 2.1 6.4 2.3 2.3 3.1 2.5 7.5 2 6-.7 5.6.5-.8 2.7-6 2-7.6 2-10.3-.2-1.3-1.1-3.3-1.7-4.6-1.4-6.5 1.2 7 8.2 15.8 8.2 2.1 0 3.8.4 3.8.9 0 1-3.5 2.1-7 2.1-1.5 0-3.2.6-3.9 1.3-1 .9-1.5.9-1.8 0-.3-.8-1.3-.9-3.3-.3-2.1.6-3.2.4-4.1-.6-.9-1.1-.8-1.4.5-1.4s1.2-.8-1.1-4.8c-2.6-4.7-2.6-4.8-.8-7.6 1.7-2.6 2-2.7 2.6-1 .4 1.1.8 1.4.8.7.1-.6-.3-2.3-.8-3.6-.7-1.7-.5-6 .5-12.9 1.5-10.5 2.3-17.5 2.8-24 .1-2 .8-4.4 1.5-5.2.7-.8 1.1-2.3.9-3.3-.2-1 .5-2.5 1.6-3.4 1.8-1.5 1.9-2 .8-4.3-1.8-4-1.5-4.6 2.3-4.6 1.9 0 3.5.1 3.5.2zm17.8 24c2.2 2.2 1.4 6.5-1.5 8.6-3.7 2.5-10.5 5.9-8 3.8 1.2-.9 1.4-1.5.6-1.8-.9-.3-.9-.9-.1-2.4.8-1.4 1.2-1.5 1.2-.4 0 .8 1.2-.9 2.6-3.8 2.6-5.5 3.2-6 5.2-4zm-34.5 4c2.6 3.5 1.7 4.5-2.5 2.7-2-.8-6.3-1.3-10.6-1.2-8.7.1-8.7-.7 0-1.8l6.3-.8-7.3.3c-4 .2-7 0-6.5-.4 1.4-1.4 4.6-1.8 11.7-1.7 6.3.2 7.1.5 8.9 2.9zM94 280.9c0 .5-.5 1.1-1.2 1.3-1.9.7-5.8-.3-5.2-1.3.7-1.2 6.4-1.2 6.4 0zm-5.6 9.6c-1.8.8-4.1 2.6-5.2 4-2.2 2.8-4.2 3.3-4.2 1 0-.8-1.1-1.7-2.5-2.1-4-1-3-3 1.3-2.6 2 .2 4.8-.1 6.2-.7 1.4-.5 3.6-1 5-1 2.4.1 2.3.1-.6 1.4z"/>
        <path id="Support" class="curve-path" d="M190 221.9c1.1 2.2 3 2.9 3 1.1 0-.5-.9-1.4-2.1-2-1.9-1.1-2-1-.9.9zM53 222.9c-2.9.8-3.5 4.5-.7 4.7 1.2.1 1.3.1.2-.3-2.1-.6-.9-2.3 1.6-2.3 1.2 0 1.7-.4 1.3-1.1-.4-.8 1.2-.9 5.7-.4 4.5.4 6 .3 4.9-.4-1.7-1.2-9.1-1.3-13-.2zM139.6 227.6c-4.1 3.9-5 5.2-3 4.1 1.6-.8 4-2.7 5.3-4.1 1.3-1.4 2.9-2.3 3.5-1.9.6.3.8.3.4-.2-.4-.4-.3-1.4.3-2.2 2.8-3.3-1.2-.7-6.5 4.3zM161 226.9c0 2.9 1.1 3.4 3.7 1.8.9-.6.7-1.3-.7-2.7-2.6-2.6-3-2.5-3 .9zM147.6 227.5c-.9 1.3-3.1 3.2-4.9 4.1-3.9 2-11 7.5-10.4 8.1 1 .9 15.3-9.6 16.5-12.1 1.5-3.3.9-3.4-1.2-.1zM141.9 236.8c-3.7 3.1-7.2 6.8-7.9 8.2l-1.2 2.5 2.4-2c6.7-5.6 15.3-14.8 13.6-14.4-.2 0-3.3 2.6-6.9 5.7zM50 246.3c0 1.3.5 1.7 1.8 1.4 9.1-2.6 11.9-2.8 16.2-1.3 5 1.7 6.4 1.4 2.8-.6-1.4-.8-5.8-1.3-11.5-1.3-8.3 0-9.3.2-9.3 1.8zM50 250.4c0 .9 1.8 1.5 5.3 1.9 2.8.3 6.1.9 7.2 1.3 1.1.4 1.7.3 1.2-.2-1.1-1.2-9.8-4.4-11.9-4.4-1 0-1.8.6-1.8 1.4zM63.1 250.4c3 .7 6.1 1.6 6.7 2 .7.4 1.2.4 1.2.1 0-1.2-7-3.5-10.2-3.4-2.7.1-2.2.3 2.3 1.3zM204.9 259.7c5.3 5.4 9.8 9.7 10 9.5.6-.3-18.1-19.2-18.9-19.2-.4 0 3.7 4.4 8.9 9.7zM50 255.4c0 1.3.7 2.7 1.6 3 1.2.4 1.5.2 1-.9-.4-1.1.1-1.5 1.7-1.5 2.6 0 10.2 3.3 11.1 4.9.4.6 1.4 1.1 2.2 1.1 4.3 0-5-6.1-11.8-7.8-6-1.5-5.8-1.6-5.8 1.2zM65.4 256.5c1.1.8 2.2 1.2 2.5.9.6-.6-1.9-2.4-3.4-2.4-.5.1-.1.7.9 1.5zM50 261.9c0 1.7 1 2 7.5 2.6 4.2.4 7.9.5 8.2.1.4-.3-.6-.6-2-.6-1.5 0-5-.9-7.9-2-6.4-2.4-5.8-2.4-5.8-.1zM111.6 261.5c-.3 1 .1 1.5 1.3 1.5s2.3 1.1 2.9 2.7c.6 1.6 1.1 2.1 1.1 1.3.1-1.3.2-1.3 1.1 0 .8 1.3 1 1.2 1-.3 0-.9-.5-1.7-1.1-1.7-.5 0-.8-.4-.5-.8.3-.5-.8-1.6-2.3-2.5-2.5-1.5-3-1.5-3.5-.2zM50 266.5c0 .8.9 1.5 2 1.5 2.4 0 2.7-1.5.4-2.4-2.2-.9-2.4-.8-2.4.9zM122.5 266c-.4.6-1.1.8-1.6.5-.5-.4-.9.2-.9 1.1 0 1.6.1 1.6 2-.1 1.1-1 2-2 2-2.2 0-.7-.9-.3-1.5.7zM123 269.1c0 .5.6.9 1.3.9 1.6.1 8.5 5.9 7 6-.7 0-1.3.4-1.3.9s1.1.8 2.4.7c1.8-.2 2.3.1 1.8 1.2-.3.9-.1 1.3.5.9 1.1-.7 3 1.1 4.8 4.7.6 1.1 2.5 2.6 4.4 3.2 1.8.6 5.5 2.9 8.1 5.2 2.7 2.3 5.2 4.2 5.7 4.2.4 0-.3-.9-1.7-1.9-2-1.6-2.2-2.2-1.2-3.4 1-1.2 1-1.7.1-2.3-.7-.4-.9-.3-.5.4 1.3 2.1-1.2 2.2-3.8.1-1.4-1.1-4.2-2.5-6.1-3-2.6-.7-3.9-1.9-4.9-4.3-.8-1.9-1.9-3.7-2.5-4-.6-.4-1.1-1.6-1.1-2.7 0-1.2-1-2.3-2.5-2.9-1.4-.5-3.7-1.7-5.1-2.7-3.1-2-5.4-2.5-5.4-1.2zM182.4 274.3c0 2.3.1 3.4.3 2.4.3-.9.9-1.4 1.5-1.1.7.4.8.2.4-.4-.4-.7.9-1.6 3.6-2.3 3.3-1 3.8-1.4 2.1-1.7-1.2-.2-3.1.2-4.2.8-1.7.9-2.1.8-2.1-.5 0-.8-.3-1.5-.7-1.5-.5 0-.8 1.9-.9 4.3zM208.7 270.6c-.4.4-.7 1.4-.7 2.1 0 3.6-6.8 7.3-13.3 7.3-3.1 0-6.1.6-7.3 1.5-2.7 2-3.9 1.9-5.3-.8l-1.2-2.2.5 2.3c.7 3.9-1.2 7.6-5.4 10.2-2.2 1.3-4 3.1-4 3.9 0 .8-.7 2.3-1.7 3.3-1.4 1.6-1.4 1.8 0 1.8.9 0 1.8-1.2 2.2-2.9.4-1.9 2-3.8 4.6-5.5 2.2-1.5 4.4-3.8 4.9-5.1 1.1-2.9 2.6-3.1 6-.9l2.5 1.6-2.1-1.9c-2.1-1.9-2.1-2-.3-3.1 1.1-.7 4.1-1.2 6.8-1.1 3.8.2 5.9-.4 9.7-2.8 2.7-1.6 4.9-3.6 4.9-4.4.1-.8.7-1.3 1.4-1.1.7.1 1.1-.3.9-1-.5-1.4-2.2-2.1-3.1-1.2zM170.6 273.1c.3.5 1.4.7 2.4.4 1-.3 2.1-.1 2.4.4.4.6 1.4.7 2.3.4 1.1-.4 1.4-.3.9.5-.4.7-.1 1.2.7 1.2 1 0 1.3-.7 1-1.9-.4-1.5-1.4-1.9-5.4-1.9-3-.1-4.7.3-4.3.9zM109.3 273.7c.8.7-1.1 3.3-2.4 3.3-.5 0-.9-.7-.9-1.5s-.5-1.5-1-1.5c-.7 0-.7.6 0 2 1.3 2.4 2.3 2.5 4 .5 1.4-1.7 5-2 5-.4 0 .5.4.8.9.4.6-.3 1.4.2 1.9 1.1.5.9 1.3 1.6 1.8 1.6 2.1.1 5.4 1.9 5.6 3 0 .7.2 1.7.3 2.3.2.5.3 1.9.4 2.9.1 2.4 1 1.6 1.6-1.3.3-1.6-.8-3.3-3.7-6.1-2.2-2.2-4.4-3.8-4.8-3.5-.4.2-1.6-.5-2.8-1.5-1.9-1.8-7.6-3-5.9-1.3zM150.5 274.1c-1 1.5.3 2.5 1.6 1.2.7-.7.7-1.3.1-1.7-.6-.3-1.4-.1-1.7.5zM154 274.5c0 .8.7 1.5 1.6 1.5.9 0 1.2-.5.8-1.2-.7-1 3.2-.8 7.2.4.7.1 1.3-.2 1.3-.7.1-.6-2.4-1.1-5.4-1.3-4.4-.2-5.5 0-5.5 1.3zM67 275.7c0 1 .4 2.4.9 3.1.5.9.8.3.7-1.7-.1-3.2-1.6-4.5-1.6-1.4zM213.1 284.2c0 .9-.4 2.5-.7 3.5-.5 1.4-.4 1.5.5.7.7-.7 1.1-2.2.8-3.5-.2-1.3-.5-1.6-.6-.7zM60 287.4c0 .2 1.8.6 3.9.8 2.2.2 3.7 0 3.5-.4-.5-.8-7.4-1.1-7.4-.4zM111.3 289.8c.1 1.9.5 3.6.9 3.s"/>
        <path id="Detail1" class="curve-path" d="M93.9 110.7c-.1.5-.1 1.2 0 1.6.1.5-.3.6-.8.2-1.7-1-3 2.8-5.6 16.5-2.6 13.2-3 19.2-.5 8.3.7-3.2 2.9-10.6 5-16.6 2.1-5.9 3.4-10.7 2.9-10.7s-1 .3-1 .7zM98.8 111.8c-1.1.2-2.2 1.9-2.8 4.5-.6 2.3-2.1 6.4-3.4 9.2-2.6 5.4-2.9 6.7-2.6 10.5.1 2.3.2 2.3.9.5.5-1.1.6-2.7.3-3.5-.3-.8-.1-1.2.3-.7.8.7 9.8-19.1 9.3-20.3-.2-.3-1.1-.4-2-.2zM159 111.8c0 2.2 7.4 7.2 10.7 7.2 1.8 0 3.3-.5 3.3-1 0-.6-.6-1-1.4-1-.7 0-2.9-1.1-4.9-2.4-1.9-1.3-3.8-2.2-4.1-1.9-.3.3-1.2 0-2.1-.7-.9-.7-1.5-.8-1.5-.2zM182.2 119.3c-1.2 1.3-2.2 2.7-2.2 3.3 0 .5-1.8 1.9-4 3.2-2.2 1.2-4 2.7-4 3.3 0 .6-.5.7-1.2.3-.6-.4-.8-.3-.4.4 1.6 2.6-10.8 10-17.4 10.3-3.1.2-3.2.2-.7.6 5.5.9 12.8-2.6 19-9 6.1-6.3 7.9-6.9 5.2-1.8-.9 1.8-1.3 3.6-1 4.1.3.6.1 1-.6 1s-1 .3-.6.6c.3.4-.4 1.5-1.6 2.6-1.2 1.1-1.6 1.7-1 1.3 2.1-1 .2 2.8-2.5 4.9-1.3 1-2.1 2.4-1.8 3.2.3.7 0 1.7-.7 2.1-.7.5-3.3 3.9-5.8 7.8-8.8 13.3-9.3 14.5-6.1 14.5 1.3 0 1.4-.2.3-.9-1-.7-.8-1.2.9-2.4 1.4-.9 1.9-2 1.5-2.8-.5-.7-.4-1 .2-.6.6.4 1.6-.6 2.2-2.1 1.8-4.1 6.3-10.2 7-9.7.4.2 3.3-1.9 6.5-4.6 8.3-7.1 13.7-10 19.9-10.6l5.4-.5-4.1-3.7c-4.7-4.1-7.9-6.1-10.1-6.1-1.8 0-1.8-.2 0 4.9 1.2 3.4 1.2 4.1.1 4.1-.8 0-4.8 3.5-9 7.7-8.1 8.3-9.7 8.5-4.3.7 1.9-2.7 4.8-7.7 6.7-11.2 1.8-3.4 3.7-6.2 4.1-6.2.5 0 .9-.6.9-1.4 0-.8.6-1.7 1.3-1.9.6-.3.2-.6-1-.6-3-.1-2.9-.9.4-4.3 1.5-1.5 2.2-2.8 1.7-2.8-.6 0-2 1-3.2 2.3zM117 119.7c0 .6-1.2 2.1-2.7 3.2-2.1 1.5-2.4 2-1.1 2.1.9 0 1.9-.6 2.2-1.3.3-.8.9-.6 2 .7 1.6 2 1.6 2 1.7 0 .1-1 .1-2.2 0-2.7 0-.4.8-.7 1.9-.7 1.1 0 2-.6 2-1.4 0-.9-1.1-1.3-3-1.2-1.6 0-3 .6-3 1.3z"/>
        <path id="Detail2" class="curve-path" d="M187.8 145.9c-7.3 2.9-18.4 11.4-17.2 13.2.2.4-.4 1.3-1.5 1.8-1 .6-3.9 5-6.5 9.8-2.5 4.9-5.5 10.2-6.6 11.9l-2 3.1 2.5-.5c1.4-.2 2.5-1.1 2.5-2.1 0-.9 2-3.5 4.5-5.9 3.5-3.3 5.1-4.2 8-4.2 3.3 0 3.5-.2 2.1-1.5-1.4-1.4-1.9-1.4-4.4-.1l-2.8 1.5 1.6-4.7c2.6-7.3 3.1-8.2 4.2-7.6.5.3.4 1.1-.3 2-.6.8-.8 1.4-.4 1.4s.1.7-.6 1.7c-1.3 1.5-1.2 1.5.9.4 2.2-1.2 13.8-4.4 19.2-5.4 1.4-.3-.3-.3-3.7-.1-3.4.3-8.1 1.1-10.4 1.9-5.3 1.9-6 1.3-2-1.6 1.7-1.2 2.7-2.7 2.4-3.2-.3-.6-.1-.7.4-.4.6.4 3.1-.2 5.5-1.2 5-2.3 4.4-2.8-.8-.6-1.9.8-3.2 1-2.9.5.9-1.5-.8-1.2-3.3.6-1.2.8-1.9 2-1.6 2.6.4.7.2.8-.4.4-2-1.2-.1-3.4 6.7-7.5 9.8-5.8 14.3-7.4 20-6.9 2.7.1 4.7 0 4.4-.5-.9-1.4-12.8-.6-17.5 1.2zM208.2 148c.6 2.3 1.3 3.9 1.5 3.6.7-.7-.7-6.5-1.7-7.1-.4-.3-.3 1.3.2 3.5zM102.9 150.2c-.4 6.1-.8 9-1.3 10.4-1.1 2.9.4 1.3 2-2.2 1.5-3 1.5-3.7.3-4.5-1.1-.7-1-.9.5-.9s1.6-.3.6-1.5-.9-1.5.6-1.5c1.6 0 1.7-.2.4-1-2.3-1.5-3-1.2-3.1 1.2z"/>
        <path id="Detail2" class="curve-path" d="M198.3 159.1c-1.2.5-.7.8 1.9.8 2 .1 4-.3 4.3-.9.7-1.1-3.3-1-6.2.1zM113.3 162.5c0 1.4.5 2.5 1.1 2.5.6 0 .4.5-.4 1-1.2.8-1.2 1-.1 1 1.1 0 1.1.3.1 1.5-.9 1-.9 1.5-.1 1.5 1.2 0 1.3-.4 1.4-3.5 0-4.3-.3-6.5-1.2-6.5-.5 0-.8 1.1-.8 2.5zM109.6 165.3c-.7 1.9-1.4 5.1-1.5 7.3 0 2.1-.2 4.8-.5 5.9-.4 1.8-.9 7.4-2.1 23-.3 3.3-.8 7.6-1.1 9.5-.4 2.5-.3 3.1.5 2 1.6-2.4 2.2-.6 1.2 3.9-.5 2.5-.5 4.1 0 4.1 1.4 0 1.7-1.5 2.3-14.3.3-6.5 1-16 1.6-21 1.1-10.9 1.9-23.7 1.4-23.7-.2 0-1 1.5-1.8 3.3zM196.5 164.5c-3.3.6-9.2 1.8-13 2.4-7.1 1.2-10.4 2.5-9.3 3.6 1.1 1.2 32-5.4 31.2-6.7-.6-1-1.3-.9-8.9.7zM210.3 164.6c.3.4.2 1.5-.4 2.5-.8 1.5-.6 1.7.6 1.3 1.3-.5 1.5-.1 1 2.4-.3 1.8 0 3.4.7 3.8.8.5.9.2.5-.9-.3-1-.3-1.7.2-1.7s.9-1.1.9-2.5c0-1.3-.6-2.3-1.2-2.2-.6.1-1-.6-.8-1.6.2-.9-.3-1.7-.9-1.7-.7 0-.9.3-.6.6zM175.6 166.6c-7.1 2.2-5.1 2.6 2.4.4 3.6-1 5.6-1.9 4.5-1.9-1.1 0-4.2.7-6.9 1.5zM127.4 168.4c-1.2 2.5.3 3.2 2.4 1 .8-.9.8-1.5-.1-2.2-.9-.8-1.5-.4-2.3 1.2zM73.7 173.7c-.4.3-.7 1.8-.6 3.2.1 2.6.1 2.5 1-.3.9-3.1.7-4.1-.4-2.9zM174.6 174.9c1.4 1.3 10.4 3 10.4 1.9 0-.5 1.6-.6 3.5-.2 1.9.3 4.1.2 4.8-.4.6-.5 2.2-.8 3.4-.7 1.2.1 2-.2 1.7-.7-.3-.4-6-.8-12.7-.8-7.1 0-11.7.4-11.1.9z"/>
        <path class="curve-path" d="M187.2 124c.2.8 4.2 4.6 8.9 8.4 9.5 7.9 7.9 5.5-2.5-3.8-3.8-3.3-6.7-5.4-6.4-4.6zM111 128.5c-1.1 1.3-1.1 1.8 0 2.8 1 .9 1.1.9.5-.2-.4-.8-.2-1.7.6-2.2.7-.4 1.1-1.1.8-1.4-.4-.3-1.2.2-1.9 1zM116.7 127.7c-.4.3-.7 1.4-.7 2.3 0 1-.6 2.3-1.4 2.9-1.4 1.2-2.8 7.1-1.6 7.1 1.3 0 6-8.3 6-10.6 0-2.3-1-3.1-2.3-1.7zM117 138.6c-.6 1.4-1.5 3.4-2.1 4.6-.9 1.7-.8 1.9.8 1.6 1.3-.2 2-1.5 2.4-4.6.6-4.8.3-5.3-1.1-1.6zM192 140.9c-3.6.9-8.1 2.7-10 3.9-4.6 2.9-3.1 2.8 4.8-.4 4.8-1.9 7.8-2.5 11.8-2.2 5 .3 5.2.2 3.7-1.5-1.9-2.1-2.1-2-10.3.2zM105.6 145.2c.3.4 0 .8-.6.8s-.8.4-.5 1c1 1.6 5.2 1.1 5.9-.6.4-.9.4-1.9.1-2.2-.3-.3-.5 0-.5.6 0 .7-.5 1.2-1.1 1.2-.5 0-.8-.4-.4-.9.3-.6-.3-.9-1.4-.8-1.1 0-1.7.5-1.5.9zM128.5 144.7c-9.7 1.1-17.4 2.8-16.6 3.6.5.5.7 1.6.3 2.5-.4 1.2-.1 1.4 1.2.9 1-.4 2-.7 2.2-.7.3 0 .2-.5-.1-1-.4-.6.5-1 2-1 1.4 0 2.4.4 2.1.9-.4.5.3.7 1.4.4 1.1-.3 1.7-.9 1.5-1.4-.3-.4 1-.6 2.9-.4 2.4.3 3.8 0 4.3-1 .7-1.3 1.2-1.3 3.6 0 2.6 1.3 2.7 1.3 2.7-1.1 0-2.5-.3-2.6-7.5-1.7z"/>
        <path class="curve-path" d="M184.2 194c.7 1.1 1.8 2.2 2.5 2.5.9.3.8-.4-.3-2-1.9-2.9-4-3.4-2.2-.5zM138.9 196.9c-2.4 1.5-5.5 4-6.9 5.5l-2.5 2.8 2.8-1.3c1.5-.7 2.5-1.4 2.2-1.7-.3-.3 1.8-2 4.5-3.9 4.3-2.9 5.8-4.3 4.7-4.3-.2 0-2.3 1.3-4.8 2.9zM170 194.9c0 1.2 4.2 4.7 7.7 6.5 1.9 1 3.9 3 4.7 5 2.1 5 3.6 5.4 3.6.9.1-3.3.2-3.6 1.3-2.2 1.2 1.6 1.5 1.6 4.2.1l3-1.6-4-.6c-2.2-.4-6.5-1.9-9.5-3.5-7.9-4.2-11-5.5-11-4.6zM141.7 200c-.8 1.1-1.7 1.7-2.2 1.2-.5-.4-.5-.1-.1.5.4.7.3 1.3-.2 1.3-.4 0-2.3 1.3-4.2 3-1.8 1.6-3.6 2.8-3.9 2.5-.4-.2-.7.5-.7 1.6 0 1.8.2 1.8 1.2.5.6-.9 1.6-1.6 2.1-1.6 1 0 10.3-9.4 10.3-10.5 0-1-.9-.5-2.3 1.5zM96.6 207.4c-1 4.6-1.6 9-1.3 9.8.3.7.6.3.6-1 .1-1.2.8-2.5 1.6-2.8.8-.4 1.5-1 1.5-1.6 0-.5-.5-.6-1.2-.2-.7.5-.8.3-.3-.6.8-1.3 2-12 1.3-12-.2 0-1.2 3.8-2.2 8.4zM152.2 200.7c1.7 2.1 4.9 9 6.9 14.8.7 2.3 1.4 3.3 1.6 2.4.2-.9-.8-4.3-2.3-7.5-1.5-3.3-2.8-6.1-2.8-6.4-.4-1.5-3.2-5-4-5-.5 0-.2.8.6 1.7zM157 201c1.4 1.1 2.8 2 3.1 2 .4 0 1.9 1.9 3.5 4.2 1.9 2.9 2.9 3.8 3.2 2.7.6-3.1-1.8-6.8-5.7-8.9-5.1-2.5-7.4-2.6-4.1 0zM148 201.8c0 .5.8 2 1.9 3.3 1 1.3 2.3 3.5 3 4.9l1.2 2.5-2-2.5c-1.1-1.4-2.1-2.3-2.1-2 0 1.1 3.9 10.4 4 9.5.1-.6.5-.1 1 1 1.6 3.8 1.1 13.4-1 17.4-2.3 4.6-10.5 11.5-17.8 14.8-4.9 2.3-5.4 2.4-7.7.9-1.3-.9-3.5-1.6-4.7-1.6-4.1 0-6.9-1.2-6.4-2.6.3-.8.1-1.4-.5-1.4s-.8-.7-.5-1.7c.6-1.5.4-1.5-1.4.2-2.7 2.4-2.5 4.6.5 7.5 2.2 2 3.1 2.2 8.5 1.7 5.9-.5 6.1-.4 4.5 1.3-1.2 1.3-1.3 2-.5 2.5.7.4 1.6.2 2-.5.5-.8 1.1-.3 1.7 1.6l.9 2.7 1.7-3.5c1-2.2 3-4.2 5.1-5.2 1.9-.9 3.6-2 3.8-2.4.2-.4 2.7-2.5 5.6-4.6 9.3-6.7 11.9-15.7 8.3-27.9-2.6-8.5-6.1-15.9-7.8-16.5-.7-.2-1.3.1-1.3.6zM58.5 202.9c-.3.6-1.3.7-2.2.4-1.1-.4-1.4-.2-.9.5.4.6 2.1 1.6 3.9 2.2 3.1 1 3.1 1-.7.4-4.2-.6-5.6.4-5.6 4.2 0 1.6.6 2.1 2.8 2.2 1.5 0 4.2.2 6 .5 3.8.4 4 .2 1.1-1.4-1.5-.8-1.9-.8-1.5 0 1 1.5.1 1.4-3.3-.4-1.6-.8-3.1-1.2-3.5-1-.3.3-.3.1.1-.4.5-.4 2.3-1.1 4.1-1.5 2.4-.4 3.4-.2 3.9.9.4 1.2.8 1.3 1.9.4 1.2-.9 1.3-.9.8.4-.3 1 .3 1.9 1.8 2.7 2.2 1.1 2.2 1 .4-.4-2.8-2.3-1.2-3.2 2-1.2 1.4 1 2.8 1.5 3.1 1.3.6-.6-7.2-5.7-8.6-5.7-.5 0-1.9-1.1-2.9-2.5-1.1-1.4-2.3-2.1-2.7-1.6zM136.4 209.5c-4.2 4.2-7.4 7.8-7.2 8.1.3.2 2.1-1 4-2.8 2-1.8 4.2-3.4 4.9-3.6.8-.2 2.1-1 2.9-1.9 1.1-1.2.8-1.1-1.2.2-4.2 2.6-3.4.6 1.5-3.7 2.3-2 3.9-3.8 3.5-3.8-.4 0-4.1 3.4-8.4 7.5zM68.5 205.4c2.7 2.4 9.4 5.1 10.3 4.2.3-.4-9.8-5.6-12.3-6.4-.5-.2.4.8 2 2.2z"/>
    </g>
</svg>

	`
}
export function MainVid({video, isClicked, isPlaying, vidStyle, poster })
{
	const vidRef = useRef(null);
	useEffect( ()=> {
		if ( isPlaying || isClicked )
			vidRef.current.play();
		else
			vidRef.current.pause();
	},[isPlaying, isClicked] );

	return (
		<video style={ vidStyle } poster={poster} ref={vidRef} muted loop>
			<source src={video} type='video/mp4' />
		</video>
	);
}


function NavBar( { projetsRef, homeRef, aboutRef, ...props } )
{
	function handleHomeClick(e)
	{
		window.scrollTo({
			top: 0,
			behavior: 'smooth',
		});
	}
	function handleProjectClick(e)
	{
		window.scrollTo({
			top: projetsRef.current.offsetTop - window.innerHeight*0.1,
			behavior: 'smooth',
		});
	}
	function handleAboutClick(e)
	{
		window.scrollTo({
			top: aboutRef.current.offsetTop - window.innerHeight*0.1,
			behavior: 'smooth',
		});
	}

	const [ lastScrollY, setLastScrolY ] = useState(window.scrollY)

	var style = { transform: 'translate3d( 50vw, -100px, 0 )' };
	useEffect(() => {
		const handleScroll = () => {
			setLastScrolY( window.scrollY );
		};
		window.addEventListener("scroll", handleScroll);

		return () => window.removeEventListener("scroll", handleScroll);
	}, []);
	if ( projetsRef.current != null && lastScrollY >= projetsRef.current.offsetTop-300)
		style = { transform: 'translate3d( 50vw, 0vw, 0 )' };

	return (
		<nav className="nav" role={"navigation"}>
			<div className='top-menu' style={style}>
				<ul>
					<li><a onClick={handleHomeClick} href >Home</a></li>
					<li><a onClick={handleProjectClick} href >Projects</a></li>
					<li><a onClick={handleAboutClick} href >About</a></li>
				</ul>
			</div>
		</nav>
	);
}

function Home({ homeRef, width })
{
	const radius = width>768 ? 160 : 140;
	const bgSvg  = getBgImg( width>768, radius );
	
  	const divStyle = {
		backgroundImage: `url("data:image/svg+xml;utf8,${encodeURIComponent(bgSvg)}")`,
	};

  	return (
	<div ref={homeRef}>
		<header id="Home" style={divStyle}>
			<div className="main-logo">
				<p>Shawak</p>
				<p className="sub-logo">GameDev • MachineLearning</p>
			</div>
		</header>
	</div>
  );
}

function Project({projetsRef, width})
{
	const isPhone = width < 768;

	const props = { isPhone, width, ImageFade };
	return (
		<div id='Project' ref={projetsRef}>
			{/* <header style={{ marginBottom: '0em' }}>Projects</header> */}
			<TPSPrototype {...props}/>
			<GANVAE {...props}/>
			<ProceduralAnimation {...props}/>
			<NeuralNetwork {...props}/>
		</div>
	);
}

function About({ aboutRef, width })
{
	const radius = width>768 ? 160 : 140;
	const bgSvg  = getBgImg( width>0, radius );
	const portrait  = getPortrait();

	const divStyle = {
		// backgroundImage: `url("data:image/svg+xml;utf8,${encodeURIComponent(bgSvg)}")`,
	};

	function Header()
	{
		return (<h1 style={{
			display           : 'flex',
			alignItems        : 'center',
			justifyContent    : 'center',
			textAlign         : 'center',
			width             : '150vw',
			height            : width>768 ? '25vw' : '50vw',
			margin            : '0',
			backgroundImage   : `url("data:image/svg+xml;utf8,${encodeURIComponent(portrait)}")`,
			backgroundRepeat  : 'no-repeat',
			backgroundSize    : 'contain',
			backgroundPosition: 'center',
			fontFamily        : 'Poppins',
			fontSize          :  width>768 ? '1.5vw' : '4vw',
			letterSpacing: '0.3em'
		}}>
			Hey! I'm Shawak
		</h1>);
	}
	function Description()
	{
		return (
			<p>
				A self-taught <b>programmer</b> and <b>game developer</b>. I've also dabbled in <b>machine learning</b> too.<br />
				In high school I was into sports so I didn't payed much attention to my studies.
				After I finished school I was stuck, didn't know what to pursue so I decided to choose the really unconventional path of self-study.
			</p>
		);
	}
   return(
      <div id="About" ref={aboutRef}>
         <header>About</header>
			<div id='aboutContent'>
				<Header />
				<Description />
			</div>
      </div>
   );
}

function Socials()
{
	return (
		<ul class="socials">
			<li><a href="https://twitter.com/ShawakSaraf" target="_blank" rel="noreferrer"><i class="icon-twitter"></i></a></li>
			<li><a href="https://www.instagram.com/shawaksaraf/" target="_blank" rel="noreferrer"><i class="icon-instagram"></i></a></li>
			<li><a href="https://www.github.com/shawaksaraf/" target="_blank" rel="noreferrer"><i class="icon-github"></i></a></li>
		</ul>
	);
}

function Content() 
{
	const containerRef = useRef(null);
	const homeRef      = useRef(null);
	const projetsRef   = useRef(null);
	const aboutRef     = useRef(null);
	// const homeEndRef = useRef(null);
	
	const [width, setWidth] = useState(window.innerWidth);

	useEffect(() => {
		const handleResize = () => {
			setWidth(window.innerWidth)
			console.log(width);
		};

		const handleWheel = (e) => {
			if (!containerRef.current)
				return;

			e.preventDefault();
			containerRef.current.scrollLeft += e.deltaY;
			console.log( 'scrolling', window.scrollX );
		};
		window.addEventListener('resize', handleResize);
		// window.addEventListener('wheel', handleWheel, { passive: false });

		return () => {
			window.removeEventListener('resize', handleResize);
			// window.removeEventListener('wheel', handleWheel);
		}
	}, [width]);

	return(
		<div className='container' ref={containerRef}>
			<Home homeRef={homeRef} width={width}/>
			<Project projetsRef={projetsRef}  width={width}/>
			<About aboutRef={aboutRef} width={width}/>
		</div>
	);
}

export { NavBar, Home, Project, About, Socials, Content };